services:
    redis:
        image: redis:alpine
        command: redis-server --requirepass admin
        restart: always
        ports:
            - '6379:6379'

    reverseproxy:
        image: reverseproxy
        build:
            context: .\reverseproxy
            dockerfile: Dockerfile-local
        ports:
            - 8080:8080
        restart: always

    mongodb:
        image: mongo
        ports:
        - 27017:27017
        restart: always

    opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
        image: opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
        container_name: opensearch-node1
        environment:
            - cluster.name=opensearch-cluster # Name the cluster
            - node.name=opensearch-node1 # Name the node that will run in this container
            - discovery.seed_hosts=opensearch-node1 # Nodes to look for when discovering the cluster
            - cluster.initial_cluster_manager_nodes=opensearch-node1 # Nodes eligible to serve as cluster manager
            - bootstrap.memory_lock=true # Disable JVM heap memory swapping
            - DISABLE_SECURITY_PLUGIN=true
            - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
        ulimits:
            memlock:
                soft: -1 # Set memlock to unlimited (no soft or hard limit)
                hard: -1
            nofile:
                soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
                hard: 65536
        ports:
        - 9200:9200 # REST API

    website:
        depends_on:
            - reverseproxy
        image: website
        build: .\frontend\website
        env_file: .\frontend\website\.env.local
        restart: always
        extra_hosts:
            - "host.docker.internal:host-gateway"

    api:
        depends_on:
            - reverseproxy
            - redis
            - mongodb
            - opensearch-node1
        image: api
        build: .\backend
        restart: always
        env_file: .\backend\env_local_full.ini


# docker-compose -f docker-compose-offline.yml down
# docker-compose -f docker-compose-offline.yml up -d --build  